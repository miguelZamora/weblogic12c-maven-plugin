<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cl.cachoza</groupId>
  <artifactId>app001ws</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>basicWebservice</name>
  <parent>
    <groupId>com.oracle.weblogic.archetype</groupId>
    <artifactId>wls-common</artifactId>
    <version>12.1.3-0-0</version>
  </parent>

 
    
    
    
  
  <properties>


    <web-context-root>basicWebservice</web-context-root>
    <packageUrl>cl/cachoza/app001ws</packageUrl>

    <oracleMiddlewareHome>C:\Oracle\__Middleware\Oracle_Home</oracleMiddlewareHome>
    <oracleServerUrl>t3://localhost:7001</oracleServerUrl>
    <oracleUsername>weblogic</oracleUsername>
    <oraclePassword>welcome1</oraclePassword>
    <oracleServerName>localhost</oracleServerName>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>


    <!-- AÃ±ade estas propiedades -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    
    <!-- Versiones de plugins -->
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-war-plugin.version>3.3.2</maven-war-plugin.version>


  </properties>
  



  
  
  
  <dependencies>
    <!-- API JAX-WS -->
    <dependency>
        <groupId>javax.xml.ws</groupId>
        <artifactId>jaxws-api</artifactId>
        <version>2.3.1</version>
        <scope>provided</scope>
    </dependency>
    

 
</dependencies>
   
  
  <build>
    <finalName>basicWebservice</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <!--Use the created web.xml-->
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <!--Create the war file based on the resources created by ws-jwsc goal-->
          <webappDirectory>${basedir}/target/generated-${project.artifactId}</webappDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.oracle.weblogic</groupId> 
        <artifactId>weblogic-maven-plugin</artifactId> 
        <version>12.1.3-0-0</version> 
        <!--
        You can find and redefine the following variables in the parent pom file arccording to your environment.
  
        oracleMiddlewareHome
        oracleServerUrl
        oracleUsername
        oraclePassword
        oracleServerName
        -->
        <configuration> 
          <middlewareHome>${oracleMiddlewareHome}</middlewareHome>
        </configuration> 
        <executions>
          <!--Run ws-jwsc goal to build the JAX-WS web service-->
          <execution>
            <phase>compile</phase> 
            <goals> 
              <goal>ws-jwsc</goal> 
            </goals>
            <configuration>
              <jws>
                <!--The web service file-->
                <file>SayHello.java</file>
                <!--Output will be a directory instead of a war file-->
                <explode>true</explode>
                <!--The name of the output directory or war file(if explode is false)-->
                <name>generated-${project.artifactId}</name>
                <contextPath>${web-context-root}</contextPath>
              </jws>
              <!--The destination directory that contains the output-->
              <destDir>${project.build.directory}</destDir>
              <!--The source directory that contains the webservice file-->
              <srcDir>${basedir}/src/main/java/${packageUrl}</srcDir>
            </configuration> 
          </execution> 
          <!--Deploy the application to the server-->
          <execution>
            <id>deployApp</id>
            <phase>pre-integration-test</phase> 
            <goals> 
              <goal>deploy</goal> 
            </goals>
            <configuration> 
              <!--The admin URL where the app is deployed. Here use the plugin's default value t3://localhost:7001-->
              <!--adminurl>${oracleServerUrl}</adminurl-->
              <user>${oracleUsername}</user> 
              <password>${oraclePassword}</password>
              <!--The location of the file or directory to be deployed-->
              <source>${project.build.directory}/${project.build.finalName}.${project.packaging}</source>
              <!--The target servers where the application is deployed. Here use the plugin's default value AdminServer-->
              <targets>${oracleServerName}</targets>
              <verbose>true</verbose> 
              <!--The deployment name of the application-->
              <name>${project.build.finalName}</name>
            </configuration>             
          </execution> 
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
